{"version":3,"sources":["components/Header.js","components/Grid.js","components/GridTile.js","components/TileSelector.js","App.js","index.js"],"names":["header","props","react_default","a","createElement","onClick","save","type","placeholder","value","levelIndex","onChange","id","fileUpload","Grid","grid","map","gridRow","gridItem","style","width","className","GridTile","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","x","y","tileData","tileClick","bind","assertThisInitialized","prevProps","prevState","setState","_this$state","console","log","currentTile","color","backgroundColor","data-id","changeColor","Component","TileSelector","selectTile","App","worldWidth","worldHeight","gridItems","saveLayout","changeCurrentTile","changeLevelIndex","tileChanged","createGridItems","createGrid","tileNumber","_this2","layout","item","jsonWithKey","JSON","stringify","level","blob","Blob","FileSaver","saveAs","concat","i","length","j","element","push","components_GridTile","key","position","_this$state2","tileCountX","tileCountY","event","target","_this3","file","document","getElementById","files","fr","FileReader","readAsText","addEventListener","json","parse","result","fileUploadProcess","_this$state3","Header","components_Grid","components_TileSelector","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.bd3dd155.chunk.js","sourcesContent":["import React from 'react';\n\nconst header = props => {\n  return (\n    <header>\n      <button onClick={props.save}>Save</button>\n      <label>\n        Level index:\n        <input\n          type=\"text\"\n          placeholder=\"1\"\n          value={props.levelIndex}\n          onChange={props.onChange}\n        />\n      </label>\n      <label>\n        Load level:\n        <input id=\"file\" type=\"file\" onChange={props.fileUpload} />\n      </label>\n    </header>\n  );\n};\n\nexport default header;\n","import React from 'react';\n\nconst Grid = props => {\n  const grid = props.grid.map(gridRow => gridRow.map(gridItem => gridItem));\n\n  return (\n    <div style={{ width: props.width }} className=\"grid\">\n      {grid}\n    </div>\n  );\n};\n\nexport default Grid;\n","import React, { Component } from 'react';\n\nclass GridTile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      x: props.x,\n      y: props.y,\n      tileData: props.tileData,\n    };\n\n    this.tileClick = this.tileClick.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.tileData !== this.props.tileData) {\n      this.setState({\n        tileData: this.props.tileData,\n      });\n    }\n  }\n\n  tileClick() {\n    const { x, y, tileData } = this.state;\n\n    console.log(this.props.currentTile);\n\n    this.setState({\n      tileData: this.props.currentTile,\n    });\n\n    this.props.onChange(x, y, this.props.currentTile);\n  }\n\n  changeColor() {\n    const { tileData } = this.state;\n    let color = 'blue';\n\n    if (tileData === 0) {\n      color = 'green';\n    }\n\n    if (tileData === 1) {\n      color = 'brown';\n    }\n\n    return {\n      backgroundColor: color,\n    };\n  }\n\n  render() {\n    const { tileData } = this.state;\n\n    return (\n      <div\n        data-id={tileData}\n        style={this.changeColor()}\n        className=\"tile\"\n        onClick={this.tileClick}\n      >\n        Data:\n        {tileData}\n      </div>\n    );\n  }\n}\n\nexport default GridTile;\n","import React from 'react';\n\nconst TileSelector = props => {\n  return (\n    <div className=\"tile-selector\">\n      <ul>\n        <li>\n          <button onClick={() => props.selectTile(-1)}>Air</button>\n        </li>\n        <li>\n          <button onClick={() => props.selectTile(0)}>Grass</button>\n        </li>\n        <li>\n          <button onClick={() => props.selectTile(1)}>Ground</button>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default TileSelector;\n","import React, { Component } from 'react';\nimport FileSaver from 'file-saver';\nimport Header from './components/Header';\nimport Grid from './components/Grid';\nimport GridTile from './components/GridTile';\nimport TileSelector from './components/TileSelector';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      worldWidth: 5000,\n      worldHeight: 600,\n      grid: [],\n      gridItems: [],\n      currentTile: -1,\n      levelIndex: '',\n    };\n\n    this.saveLayout = this.saveLayout.bind(this);\n    this.changeCurrentTile = this.changeCurrentTile.bind(this);\n    this.changeLevelIndex = this.changeLevelIndex.bind(this);\n    this.tileChanged = this.tileChanged.bind(this);\n    this.fileUpload = this.fileUpload.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.grid !== this.state.grid) {\n      this.createGridItems();\n    }\n  }\n\n  componentDidMount() {\n    this.createGrid();\n  }\n\n  changeCurrentTile(tileNumber) {\n    this.setState(\n      {\n        currentTile: tileNumber,\n      },\n      () => {\n        this.createGridItems();\n      }\n    );\n  }\n\n  saveLayout() {\n    const { grid, levelIndex } = this.state;\n\n    if (levelIndex === '') {\n      return;\n    }\n\n    const layout = grid.map(gridRow => gridRow.map(item => item.tileData));\n\n    const jsonWithKey = JSON.stringify({\n      level: layout,\n    });\n\n    const blob = new Blob([jsonWithKey], { type: 'application/json' });\n    FileSaver.saveAs(blob, `level${levelIndex}.json`);\n  }\n\n  createGridItems() {\n    const { grid } = this.state;\n    const gridItems = [];\n    for (let i = 0; i < grid.length; i++) {\n      gridItems[i] = [];\n      for (let j = 0; j < grid[i].length; j++) {\n        const element = grid[i][j];\n        gridItems[i].push(\n          <GridTile\n            key={`${element.position.x}${element.position.y}`}\n            currentTile={this.state.currentTile}\n            tileData={element.tileData}\n            onChange={this.tileChanged}\n            x={element.position.x}\n            y={element.position.y}\n          />\n        );\n      }\n    }\n\n    this.setState({\n      gridItems,\n    });\n  }\n\n  tileChanged(x, y, tileData) {\n    const { grid } = this.state;\n\n    grid[y][x].tileData = tileData;\n\n    this.setState({\n      grid,\n    });\n  }\n\n  createGrid() {\n    const { worldWidth, worldHeight, currentTile } = this.state;\n    const tileCountX = worldWidth / 50;\n    const tileCountY = worldHeight / 50;\n\n    const grid = [];\n\n    for (let i = 0; i < tileCountY; i++) {\n      grid[i] = [];\n      if (i >= tileCountY - 4) {\n        for (let j = 0; j < tileCountX; j++) {\n          grid[i].push({\n            position: { x: j, y: i },\n            tileData: 1,\n          });\n        }\n      } else {\n        for (let j = 0; j < tileCountX; j++) {\n          grid[i].push({\n            position: { x: j, y: i },\n            tileData: -1,\n          });\n        }\n      }\n    }\n\n    this.setState({\n      grid,\n    });\n  }\n\n  changeLevelIndex(event) {\n    const { value } = event.target;\n\n    this.setState({\n      levelIndex: value,\n    });\n  }\n\n  fileUpload(event) {\n    const fileEl = document.getElementById('file');\n    const file = fileEl.files[0];\n    const fr = new FileReader();\n    fr.readAsText(file);\n\n    fr.addEventListener('load', () => {\n      const json = JSON.parse(fr.result);\n      this.fileUploadProcess(json.level);\n    });\n  }\n\n  fileUploadProcess(json) {\n    const grid = [];\n    for (let i = 0; i < json.length; i++) {\n      grid[i] = [];\n      for (let j = 0; j < json[i].length; j++) {\n        grid[i].push({\n          position: { x: j, y: i },\n          tileData: json[i][j],\n        });\n      }\n    }\n\n    this.setState({\n      grid,\n    });\n  }\n\n  render() {\n    const { worldWidth, gridItems, levelIndex } = this.state;\n    return (\n      <div className=\"App\">\n        <Header\n          levelIndex={levelIndex}\n          onChange={this.changeLevelIndex}\n          save={this.saveLayout}\n          fileUpload={this.fileUpload}\n        />\n        <Grid grid={gridItems} width={worldWidth} />\n        <TileSelector selectTile={this.changeCurrentTile} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './style.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}